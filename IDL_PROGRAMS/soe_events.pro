; $ID:	SOE_EVENTS.PRO,	2025-01-30-14,	USER-KJWH	$
  PRO SOE_EVENTS, EVENTS, OVERWRITE=OVERWRITE, BUFFER=BUFFER

;+
; NAME:
;   SOE_EVENTS
;
; PURPOSE:
;   Program to create event specific maps or animations
;
; PROJECT:
;   SOE_PHYTOPLANKTON
;
; CALLING SEQUENCE:
;   SOE_EVENTS,EVENTS
;
; REQUIRED INPUTS:
;   EVENTS.......... The name of the specific event to process (e.g. 2023_GOM_BLOOM, 2024_UPWELLING)
;
; OPTIONAL INPUTS:
;   OVERWRITE....... Overwrite existing images
;   BUFFER.......... Turn on/off the graphics buffer
;
; KEYWORD PARAMETERS:
;   KEY1........... Document keyword parameters like this. Note that the keyword is shown in ALL CAPS!
;
; OUTPUTS:
;   OUTPUT.......... Describe the output of this program or function
;
; OPTIONAL OUTPUTS:
;   None
;
; COMMON BLOCKS: 
;   None
;
; SIDE EFFECTS:  
;   None
;
; RESTRICTIONS:  
;   None
;
; EXAMPLE:
; 
;
; NOTES:
;   $Citations or any other useful notes$
;   
; COPYRIGHT: 
; Copyright (C) 2025, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
; AUTHOR:
;   This program was written on January 30, 2025 by Kimberly J. W. Hyde, Northeast Fisheries Science Center | NOAA Fisheries | U.S. Department of Commerce, 28 Tarzwell Dr, Narragansett, RI 02882
;    
; MODIFICATION HISTORY:
;   Jan 30, 2025 - KJWH: Initial code written
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'SOE_EVENTS'
  COMPILE_OPT IDL3
  SL = PATH_SEP()
  
  IF ~N_ELEMENTS(EVENTS) THEN MESSAGE, 'ERROR: Must provide at least one event.'
  
  FOR E=0, N_ELEMENTS(EVENTS)-1 DO BEGIN
    DIR_PLOTS = !S.SOE_PHYTOPLANKTON + 'EVENT_MAPS_ANIMATIONS' + SL + EVENTS[E] + SL & DIR_TEST, DIR_PLOTS
    CASE EVENTS[E] OF
      '2024_UPWELLING': BEGIN
        
      END
      '2024_SST_ANOMALY': BEGIN
        BUFFER = 1
        MP = 'NES'
        SDR = ['20240101','20241231']
        PERIODS = ['M','W']
        
        SPAL = 'PAL_BLUEYELLOWRED'
        LONS = [-76,-72,-68,-64] & LATS = [36, 40, 44]
        
        FOR R=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          APER = PERIODS[R]
          CODE = APER + '_'
          FILE = GET_FILES('ACSPO', PRODS='SST', FILE_TYPE='STACKED_ANOMS',PERIODS=APER, DATERANGE=SDR) & FP = PARSE_IT(FILE)

          CASE APER OF 
            'M': PERS = YEAR_MONTH_RANGE(SDR[0],SDR[1])
            'W': PERS = YEAR_WEEK_RANGE(SDR[0],SDR[1])
          ENDCASE
          FOR S=0, N_ELEMENTS(PERS)-1 DO BEGIN
            OUTPER = CODE + PERS[S]
            PSTR = PERIOD_2STRUCT(OUTPER)
            PDR = GET_DATERANGE(PSTR.DATE_START, PSTR.DATE_END)
            PNGFILE = DIR_PLOTS + REPLACE(FP.NAME,FP.PERIOD,OUTPER) + '-' + spal + '.png'
            IF FILE_MAKE(FILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
            PROD_SCALE = 'SST_-5_5' & TICKNAMES=['-5','-2.5','0','2.5','5'] & TICKVALS=[-5,-2.5,0,2.5,5] & FTICKNAMES=['-9','4.5','0','4.5','9'] & FTICKVALS=[-5,-2.5,0,2.5,5] & CONTOUR_TEMP=28
  
            IMG = PROJECT_MAKE_IMAGE(VERSTR, FILE=FILE, PAL=SPAL, DATERANGE=PDR,BUFFER=BUFFER, RESIZE=1, MAPP=MP, PROD_SCALE=PROD_SCALE, $
              /ADD_BATHY, BATHY_DEPTH=200, BATHY_COLOR=0, BATHY_THICK=2,$
              _EXTRA=EXTRA)
            IF IDLTYPE(IMG) NE 'OBJREF' THEN CONTINUE
            
            MR = MAPS_READ(MP)
            CB_POS = [0.025, 0.88, 0.5, 0.91]
            CBAR, PROD_SCALE, IMG=IMG, FONT_SIZE=12, CB_TYPE=1, CB_POS=CB_POS, CB_TITLE=UNITS('TEMP'), PAL=SPAL,CB_TICKVALUES=TICKVALS, CB_TICKNAMES=TICKNAMES,_EXTRA=_EXTRA,RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG
  
            IMGBLK = (REPLICATE(255B,2,2))
            OBJ = IMAGE(IMGBLK,RGB_TABLE=RGB_TABLE,/NODATA,/HIDE,BACKGROUND_COLOR=BACKGROUND_COLOR,TRANSPARENCY=100,POSITION = [0,0,0.001,0.001],BUFFER=BUFFER,/CURRENT)
            CBAR, PROD_SCALE, IMG=OBJ, FONT_SIZE=12, CB_TYPE=3, CB_POS=CB_POS, CB_TITLE='(!Uo!NF)', PAL=SPAL, CB_TICKVALUES=FTICKVALS, CB_TICKNAMES=FTICKNAMES,RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG2
  
            PFILE, PNGFILE
            IMG.SAVE, PNGFILE
            IMG.CLOSE
          ENDFOR ; 
        ENDFOR ; PERIODS  
        
      END
      '2023_GOM_CHL_BLOOM': BEGIN
        ; CHL bloom
        MP = 'NES'
        SDR = ['20230101','20230930']
        MTHS = YEAR_MONTH_RANGE(SDR[0],SDR[1])
        BUFFER = 1
        OVERWRITE = 0
        SPAL = 'PAL_NAVY_GOLD'
        APAL = 'PAL_BLUEGREEN_ORANGE'

        LONS = [-76,-72,-68,-64] & LATS = [36, 40, 44]
        SFILE = GET_FILES('OCCCI', PRODS='CHLOR_A-CCI', PERIODS='M', DATERANGE='2023', MAPS='L3B2') & SFP = PARSE_IT(SFILE)
        AFILE = GET_FILES('OCCCI', PRODS='CHLOR_A-CCI', PERIODS='M', DATERANGE='2023', MAPS='L3B2', FILE_TYPE='STACKED_ANOMS') & AFP = PARSE_IT(AFILE)

        SPROD_SCALE = 'CHLOR_A_0.1_10' & STICKNAMES=['0.1','0.3','1','3','10'] & STICKVALS=[0.1,0.3,1,3,10] & STITLE=UNITS('CHLOROPHYLL')
        APROD_SCALE = 'RATIO_0.1_10'   & ATICKNAMES=['-10x','-3x','0','3x','10x'] & ATICKVALS=[0.1,0.3,1,3,10] & ATITLE='Chlorophyll Anomaly'

        TYPES = 'ANOMS';['STATS','ANOMS']
        FOR T=0, N_ELEMENTS(TYPES)-1 DO BEGIN
          DIR_PLOTS = VERSTR.DIRS.DIR_PLOTS+'CHLOR_A' + SL + 'GOM_' + TYPES[T] + SL
          CASE TYPES[T] OF
            'STATS': BEGIN & FILE=SFILE & PROD_SCALE=SPROD_SCALE & TICKNAMES=STICKNAMES & TICKVALS=STICKVALS & TITLE=STITLE & END
            'ANOMS': BEGIN & FILE=AFILE & PROD_SCALE=APROD_SCALE & TICKNAMES=ATICKNAMES & TICKVALS=ATICKVALS & TITLE=ATITLE & END
          ENDCASE
          FOR W=0, N_ELEMENTS(MTHS)-1 DO BEGIN
            MPER = PERIOD_2STRUCT('M_'+MTHS[W])
            MDR = GET_DATERANGE(MPER.DATE_START, MPER.DATE_END)
            PNGFILE = DIR_PLOTS + REPLACE(SFP.NAME,SFP.PERIOD,'M_'+STRMID(MPER.DATE_START,0,6)) + '.png'
            IF FILE_MAKE(FILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE

            IMG = PROJECT_MAKE_IMAGE(VERSTR, FILE=FILE, PAL=SPAL, DATERANGE=MDR,BUFFER=BUFFER, RESIZE=1, MAPP=MP, PROD_SCALE=PROD_SCALE, $
              /ADD_BATHY, BATHY_DEPTH=200, BATHY_COLOR=0, BATHY_THICK=2,   _EXTRA=EXTRA)
            
            MR = MAPS_READ(MP)
            CB_POS = [0.075, 0.85, 0.55, 0.89]
            CBAR, PROD_SCALE, IMG=IMG, FONT_SIZE=16, CB_TYPE=1, CB_POS=CB_POS, CB_TITLE=TITLE, PAL=SPAL,CB_TICKVALUES=TICKVALS, CB_TICKNAMES=TICKNAMES,_EXTRA=_EXTRA,RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG

            IMG.SAVE, PNGFILE
            IMG.CLOSE
          ENDFOR
        ENDFOR
      END
      '2023_GULF_STREAM_SST': BEGIN
        MP = 'NES'
        SDR = ['20230201','20231201']
        WKS = YEAR_WEEK_RANGE(SDR[0],SDR[1])
        BUFFER = 1
        OVERWRITE = 1
        DIR_PLOTS = VERSTR.DIRS.DIR_PLOTS + 'SST' + SL + 'NO_GS' + SL
        PAL = 'PAL_BLUEYELLOWRED'
        LONS = [-76,-72,-68,-64] & LATS = [36, 40, 44]
        FILE = GET_FILES('ACSPO', PRODS='SST', PERIODS='W', DATERANGE='2023',VERSION='V2.1') & FP = PARSE_IT(FILE)
        GSFILE = FILE_SEARCH(!S.IDL_DATA + 'GSmeanpath.csv')
        GS = CSV_READ(GSFILE)

        CANYONS = ['BLOCK_CANYON','HYDROGRAPHER_CANYON']
        MAB_CANYONS = READ_SHPFILE('MAB_CANYONS',MAPP=MP)
        SCALLOPS = ['ET_OPEN','ET_CLOSE']
        MAB_SCALLOPS = READ_SHPFILE('MAB_SCALLOPS',MAPP=MP)
        OUTLINES = []
        
        FOR W=0, N_ELEMENTS(WKS)-1 DO BEGIN
          WPER = PERIOD_2STRUCT('W_'+WKS[W])
          WDR = GET_DATERANGE(WPER.DATE_START, WPER.DATE_END)
          PNGFILE = DIR_PLOTS + REPLACE(FP.NAME,FP.PERIOD,STRJOIN(['D',STRMID(WPER.DATE_START,0,8),STRMID(WPER.DATE_END,0,8)],'_')) + '.png'
          IF FILE_MAKE(FILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
          PROD_SCALE = 'SST_15_30' & TICKNAMES=['15','18','21','24','27','30'] & TICKVALS=[15,18,21,24,27,30] & FTICKNAMES=['60','65','70','75','80','85'] & FTICKVALS=[15.556,18.333,21.111,23.889,26.667,29.444] & CONTOUR_TEMP=28

          IF WPER.JD_START LE DATE_2JD(20230620) THEN BEGIN & PROD_SCALE='SST_5_25' & TICKNAMES=['5','10','15','20','25'] & TICKVALS=[5,10,15,20,25] & FTICKNAMES=['45','55','65','75'] & FTICKVALS=[7.222,12.778,18.333,23.889] & CONTOUR_TEMP=27 & CB_TICKSN = 8 & ENDIF
          IF WPER.JD_START LE DATE_2JD(20230401) THEN BEGIN & PROD_SCALE='SST_0_25' & TICKNAMES=['0','5','10','15','20','25'] & TICKVALS=[0,5,10,15,20,25] & FTICKNAMES=['35','45','55','65','75'] & FTICKVALS=[1.667,7.222,12.778,18.333,23.889] & CONTOUR_TEMP=27 & CB_TICKSN = 8 & ENDIF
          IF WPER.JD_START GE DATE_2JD(20230915) THEN BEGIN & PROD_SCALE='SST_12_28' & TICKNAMES=['12','16','20','24','28'] & TICKVALS=[12,16,20,24,28] & FTICKNAMES=['55','60','65','70','75','80'] & FTICKVALS=[12.778,15.556,18.333,21.111,23.889,26.667] & CONTOUR_TEMP=27 & CB_TICKSN = 8 & ENDIF
          IF WPER.JD_START GE DATE_2JD(20230929) THEN BEGIN & PROD_SCALE='SST_12_28' & TICKNAMES=['12','16','20','24','28'] & TICKVALS=[12,16,20,24,28] & FTICKNAMES=['55','60','65','70','75','80'] & FTICKVALS=[12.778,15.556,18.333,21.111,23.889,26.667]& CONTOUR_TEMP=26 & CB_TICKSN = 8 & ENDIF
          IF WPER.JD_START GE DATE_2JD(20231028) THEN BEGIN & PROD_SCALE='SST_7_28'  & TICKNAMES=['7','14','21','28'] & TICKVALS=[7,14,21,28] & FTICKNAMES=['45','50','55','60','65','70','75','80'] & FTICKVALS=[7.222,10.0,12.778,15.556,18.333,21.111,23.889,26.667]& CONTOUR_TEMP=25 & CB_TICKSN = 6 & ENDIF
          IMG = PROJECT_MAKE_IMAGE(VERSTR, FILE=FILE, PAL=PAL, DATERANGE=WDR,BUFFER=BUFFER, RESIZE=1, MAPP=MP, PROD_SCALE=PROD_SCALE, $
            /ADD_BATHY, BATHY_DEPTH=200, BATHY_COLOR=0, BATHY_THICK=2,$
            /ADD_CONTOURS, C_LEVELS=CONTOUR_TEMP,$
            /ADD_OUTLINE, OUTLINE_IMG=OUTLINES, OUT_COLOR=0, OUT_THICK=3,$
            _EXTRA=EXTRA)

          MR = MAPS_READ(MP)
          CB_POS = [0.065, 0.85, 0.525, 0.89]
          CBAR, PROD_SCALE, IMG=IMG, FONT_SIZE=15, CB_TYPE=1, CB_POS=CB_POS, CB_TITLE=UNITS('TEMP'), PAL=PAL,CB_TICKVALUES=TICKVALS, CB_TICKNAMES=TICKNAMES,_EXTRA=_EXTRA,RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG

          IMGBLK = (REPLICATE(255B,2,2))
          OBJ = IMAGE(IMGBLK,RGB_TABLE=RGB_TABLE,/NODATA,/HIDE,BACKGROUND_COLOR=BACKGROUND_COLOR,TRANSPARENCY=100,POSITION = [0,0,0.001,0.001],BUFFER=BUFFER,/CURRENT)
          CBAR, PROD_SCALE, IMG=OBJ, FONT_SIZE=15, CB_TYPE=3, CB_POS=CB_POS, CB_TITLE='(!Uo!NF)', PAL=PAL, CB_TICKVALUES=FTICKVALS, CB_TICKNAMES=FTICKNAMES,RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG2

          PFILE, PNGFILE
          IMG.SAVE, PNGFILE
          IMG.CLOSE
        ENDFOR
        FILES = FILE_SEARCH(DIR_PLOTS + 'D*.png')
        FPS = 3
        MOVIE_FILE = DIR_PLOTS + '2023_SST.mp4'
        IF FILE_MAKE(FILES,MOVIE_FILE) THEN MAKE_MOVIE, FILES[0:-2], MOVIE_FILE=MOVIE_FILE, FRAME_SEC=FPS
      END
      ELSE: MESSAGE, 'ERROR: Unrecognized event, ' + EVENTS[E] + '. Check event name.'         
    ENDCASE
  ENDFOR
  


END ; ***************** End of SOE_EVENTS *****************
