; $ID:	SOE_MONTHLY_TIMESERIES.PRO,	2023-09-19-09,	USER-KJWH	$
  PRO SOE_MONTHLY_TIMESERIES, VERSION_STRUCT, BUFFER=BUFFER

;+
; NAME:
;   SOE_MONTHLY_TIMESERIES
;
; PURPOSE:
;   $PURPOSE$
;
; CATEGORY:
;   $CATEGORY$
;
; CALLING SEQUENCE:
;   Result = SOE_MONTHLY_TIMESERIES($Parameter1$, $Parameter2$, $Keyword=Keyword$, ...)
;
; REQUIRED INPUTS:
;   VERSION_STRUCT.......... The version structure for the SOE
;
; OPTIONAL INPUTS:
;   Parm2.......... Describe optional inputs here. If none, delete this section.
;
; KEYWORD PARAMETERS:
;   KEY1........... Document keyword parameters like this. Note that the keyword is shown in ALL CAPS!
;
; OUTPUTS:
;   OUTPUT.......... Describe the output of this program or function
;
; OPTIONAL OUTPUTS:
;   None
;
; COMMON BLOCKS: 
;   None
;
; SIDE EFFECTS:  
;   None
;
; RESTRICTIONS:  
;   None
;
; EXAMPLE:
; 
;
; NOTES:
;   $Citations or any other useful notes$
;   
; COPYRIGHT: 
; Copyright (C) 2020, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
; AUTHOR:
;   This program was written on December 31, 2020 by Kimberly J. W. Hyde, Northeast Fisheries Science Center | NOAA Fisheries | U.S. Department of Commerce, 28 Tarzwell Dr, Narragansett, RI 02882
;    
; MODIFICATION HISTORY:
;   Dec 31, 2020 - KJWH: Initial code written
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'SOE_MONTHLY_TIMESERIES'
  COMPILE_OPT IDL2
  SL = PATH_SEP()
  
  IF ~N_ELEMENTS(VERSION_STRUCT) THEN MESSAGE, 'ERROR: Must provide the SOE VERSION structure'
  IF ~N_ELEMENTS(BUFFER) THEN BUFFER=0

  VERSTR = VERSION_STRUCT
  SHAPES = VERSTR.SHAPEFILES
  
  MP = VERSTR.INFO.MAP_OUT
  
  IF ~N_ELEMENTS(DATFILE) THEN DATFILE = VERSTR.INFO.DATAFILE
  STRUCT = IDL_RESTORE(DATFILE)

  DR = VERSTR.INFO.DATERANGE
  YEARS = YEAR_RANGE(DR[0],DR[1],/STRING)
  YRS  = YEAR_RANGE(MIN(DATE_2YEAR(DR)),MAX(DATE_2YEAR(DR)))
  AX   = DATE_AXIS([YRS[0],YRS[-1]],/YEAR,STEP=6)
  MONS = MONTH_RANGE()
  XDIS = 1/13. & XSP = 1/12.-XDIS
  XPOS1 = 0.02+(FINDGEN(12)*XDIS+(XDIS/2)+XSP*2)
  XPOS2 = XPOS1 + XDIS - XSP
  
  IF ~N_ELEMENTS(PRODS) THEN SPRODS = VERSTR.INFO.MONTHLY_TIMESERIES_PRODS
  IF ~N_ELEMENTS(DIR_PLOTS) THEN DIR_PLT = VERSTR.DIRS.DIR_PLOTS+'MONTHLY_TIMESERIES'+SL ELSE DIR_PLT = DIR_PLOTS & DIR_TEST, DIR_PLT
  
  BKG = [255,255,255];[195,237,255]
  PCLR = [0,53,95]
  SCLR = [0,112,192]
  
  FOR S=0, N_ELEMENTS(SPRODS)-1 DO BEGIN
    APROD = SPRODS[S]
    STR = STRUCT[WHERE(STRUCT.PERIOD_CODE EQ 'M' AND STRUCT.MATH EQ 'STACKED_STATS' AND STRUCT.PROD EQ APROD,COUNT,/NULL)]
    IF COUNT EQ 0 THEN CONTINUE

    YMAJOR = 5
    CASE VALIDS('PRODS',APROD) OF
      'SST':     BEGIN & YRANGE = [0,30] & TITLE='Sea Surface Temperature ' + UNITS('SST',/NO_NAME) & ATAG = 'AMEAN' & ANOM_MATH = 'ANOMALY_DIF' & YMAJOR=6 & END
      'CHLOR_A': BEGIN & YRANGE = [0,3]  & TITLE='Chlorophyll ' + UNITS('CHLOR_A',/NO_NAME) & ATAG = 'MED' & ANOM_MATH = 'ANOMALY_RATIO' & END
      'PPD':     BEGIN & YRANGE = [0,2]  & TITLE='Primary Production ' + UNITS('PPD',/NO_NAME) & ATAG = 'MED' & ANOM_MATH = 'ANOMALY_RATIO' & END
      'PAR':     BEGIN & YRANGE = [0,60] & TITLE='Photosynthetic Available Radiation ' + UNITS('PAR',/NO_NAME) & ATAG = 'AMEAN' & ANOM_MATH = 'ANOMALY_DIF' & END
    ENDCASE
    
    FOR H=0, N_ELEMENTS(SHAPES)-1 DO BEGIN ; Shapefile loop
      SHAPE = VERSTR.SHAPEFILES.(H)
      NAMES = SHAPE.SUBAREA_NAMES
      TITLES = SHAPE.SUBAREA_TITLES

      FOR N=0, N_ELEMENTS(NAMES)-1 DO BEGIN
        ANAME = NAMES[N]
        STITLE = TITLES[N]
        
        MSET = STR[WHERE(STR.SUBAREA EQ ANAME AND STR.N GT 0,/NULL)]
        IF MSET EQ [] THEN CONTINUE
        MONTH = DATE_2MONTH(PERIOD_2DATE(MSET.PERIOD))

        PNGFILE = DIR_PLT + ANAME + '-' + APROD + '-MONTHLY_TIMESERIES.PNG'
        IF FILE_MAKE(DATFILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN GOTO, SKIP_PNGFILE

        W = WINDOW(DIMENSIONS=[1300,850], BUFFER=BUFFER)
        PLY = POLYGON([0,1,1,0,0],[0,0,1,1,0],FILL_COLOR=BKG,TRANSPARENCY=80,/CURRENT)
        TTXT = TEXT(0.5,0.96,STITLE,ALIGNMENT=0.5,FONT_SIZE=16,FONT_STYLE='BOLD',COLOR=PCLR)
        FOR M=0, N_ELEMENTS(MONS)-1 DO BEGIN
          AMON = MONS[M]
          MNAME = STRUPCASE(MONTH_NAMES(AMON,/SHORT))
          MON = MSET[WHERE(MONTH EQ AMON AND MSET.PERIOD_CODE EQ 'M',/NULL)]
          IF MON EQ [] THEN CONTINUE
          MON = SORTED(MON,TAG='PERIOD')
          YR  = DATE_2JD(DATE_2YEAR(PERIOD_2DATE(MON.PERIOD)))
          YRS = DATE_2YEAR(PERIOD_2DATE(MON.PERIOD))
          MDATA = GET_TAG(MON,ATAG)
  
          IF M NE 0 THEN YTICKNAMES = REPLICATE('',YMAJOR) ELSE YTICKNAMES=[]
          IF M EQ 0 THEN YTITLE = TITLE ELSE YTITLE = ''
  
          PL = PLOT(AX.JD, [1,1],XTEXT_COLOR=PCLR,COLOR=PCLR,XCOLOR=PCLR,/NODATA,BACKGROUND_COLOR=BKG,FONT_SIZE=14,XSTYLE=3,POSITION=[XPOS1[M],0.1,XPOS2[M],0.9],/CURRENT,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,XTEXT_ORIENTATION=60,XMINOR=2,YRANGE=YRANGE,YMAJOR=YMAJOR,YTICKNAME=YTICKNAMES,YTITLE=YTITLE)
          PL = PLOT(YR,MDATA,COLOR=SCLR,BACKGROUND_COLOR='WHITE',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=0.2,SYM_COLOR=SCLR,/OVERPLOT,LINESTYLE=0,THICK=2) ; BACKGROUND_COLOR='GAINSBORO'
          PL = PLOT([YR[0],YR[-1]],[MEDIAN(MDATA),MEDIAN(MDATA)],/OVERPLOT,/CURRENT,XRANGE=MM(YR),THICK=3,COLOR='LIGHT_GREY',YRANGE=YRANGE)
          MK = MANN_KENDALL(MDATA)
          SLP = MK.SLOPE
          INT = MEDIAN(MDATA-SLP*YRS)
          IF MK.SIGNIFICANT EQ 1 THEN PL = PLOT([YR[0],YR[-1]],[SLP*YRS[0]+INT,SLP*YRS[-1]+INT],/OVERPLOT,/CURRENT,XRANGE=MM(YR),THICK=4,COLOR=PCLR,YRANGE=YRANGE)
          TX = TEXT(XPOS1[M]+(XPOS2-XPOS1)/2,0.91,MNAME,ALIGNMENT=0.5,COLOR=PCLR,FONT_SIZE=12,FONT_STYLE='BOLD')
  
        ENDFOR ; MONTHS
        W.SAVE, PNGFILE
        W.CLOSE
        PFILE, PNGFILE
        SKIP_PNGFILE:

        PNGFILE2 = DIR_PLT + ANAME + '-' + APROD + '-MONTHLY_TIMESERIES_V2.PNG'
        IF FILE_MAKE(DATFILE,PNGFILE2,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE

        PER = MSET.PERIOD
        BSET = WHERE_SETS(DATE_2YEAR(PERIOD_2DATE(PER)))
        MONTHS = MONTH_RANGE(/STRING)
        YEARS = YEAR_RANGE(MIN(DATE_2YEAR(PERIOD_2DATE(PER))),MAX(DATE_2YEAR(PERIOD_2DATE(PER)))) & NYEARS = N_ELEMENTS(YEARS) & MID=NYEARS/2 & MIDYEAR=YEARS[MID]
        PER = []
        FOR B=0, N_ELEMENTS(BSET)-1 DO PER = [PER,MONTHS+BSET[B].VALUE]
        PER = PER[SORT(PER)]
        PERNUM = FINDGEN(N_ELEMENTS(PER))
        MID = WHERE(STRMID(PER,2,4) EQ MIDYEAR)

        XTICKNAME = MONTH_NAMES(/SHORT)
        XTICKVALUE = PERNUM[MID]
        W = WINDOW(DIMENSIONS=[1200,800], BUFFER=BUFFER)
        PL = PLOT(MM(PERNUM), YRANGE,/NODATA,XSTYLE=3,/CURRENT,POSITION=[0.08,0.07,0.97,0.94],FONT_SIZE=14,$
          XTICKVALUE=XTICKVALUE,XTICKNAME=XTICKNAME,XMINOR=1,XTICKLEN=0.03,XTITLE='Annual Time Series by Month',YTICKLEN=0.03,YRANGE=YRANGE,YMAJOR=4,YMINOR=3,YTICKNAME=YTICKNAME,YTITLE=TITLE)
        TTXT = TEXT(0.5,0.96,STITLE,ALIGNMENT=0.5,FONT_SIZE=16,FONT_STYLE='BOLD')

        ;    PLOT, XDATES,REPLICATE(0.0,N_ELEMENTS(XDATES)),/NO_DATA, XTICKVALUE=XTICKV, XTICKNAME=XTICKNAME, YRANGE=YRANGE, YTITLE=UNITS('CHLOROPHYLL')
        FOR M=0, N_ELEMENTS(MONS)-1 DO BEGIN
          AMON = MONS[M]
          MNAME = STRUPCASE(MONTH_NAMES(AMON,/SHORT))
          MON = MSET[WHERE(MONTH EQ AMON AND MSET.PERIOD_CODE EQ 'M',/NULL)]
          IF MON EQ [] THEN CONTINUE
          MON = SORTED(MON,TAG='PERIOD')
          DT = STRMID(MON.PERIOD,6,2)+STRMID(MON.PERIOD,2,4)
          OK = WHERE_MATCH(PER,DT)
          PNUM = PERNUM[OK]
          YR   = DATE_2JD(DATE_2YEAR(PERIOD_2DATE(MON.PERIOD)))
          MDATA = GET_TAG(MON,ATAG)
          PL = PLOT(PNUM,MDATA,THICK=2,/OVERPLOT,/CURRENT,XRANGE=MM(PERNUM),YRANGE=YRANGE) ; SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=0.2,SYM_COLOR='RED',
          PL = PLOT(MM(PNUM),[MEDIAN(MDATA),MEDIAN(MDATA)],/OVERPLOT,/CURRENT,XRANGE=MM(PERNUM),THICK=3,COLOR='LIGHT_GREY',YRANGE=YRANGE)
          MK = MANN_KENDALL(ALOG(MDATA))
          SLP = MK.SLOPE
          INT = MEDIAN(MDATA-SLP*PNUM)
          IF MK.SIGNIFICANT EQ 1 THEN PL = PLOT(MM(PNUM),[SLP*PNUM[0]+INT,SLP*PNUM[-1]+INT],/OVERPLOT,/CURRENT,XRANGE=MM(PERNUM),THICK=4,COLOR='RED',YRANGE=YRANGE)
        ENDFOR
        W.SAVE, PNGFILE2
        W.CLOSE
        PFILE, PNGFILE2
      ENDFOR ; NAMES
    ENDFOR ; PRODS
  ENDFOR ; VERSION        


END ; ***************** End of SOE_MONTHLY_TIMESERIES *****************
